{"version":3,"sources":["api/goods.ts","App.tsx","components/GoodsList.tsx","index.tsx"],"names":["getAll","fetch","then","response","json","FetchType","get5First","goods","sort","a","b","name","localeCompare","slice","getRedGoods","filter","good","color","GoodsList","map","id","style","memo","App","useState","setGoods","none","currentFetch","setCurrentFetch","getGoods","fetchFunc","nextFetch","goodsFromServer","type","className","onClick","all","fiveFirst","onlyRed","ReactDOM","render","document","getElementById"],"mappings":"+LAGO,SAASA,IACd,OAAOC,MAHI,yEAIRC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAGxB,ICIFC,EDJQC,EAAY,WACvB,OAAON,IAASE,MAAK,SAACK,GAAD,OAAmBA,EACrCC,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEE,KAAKC,cAAcF,EAAEC,SACtCE,MAAM,EAAG,OAGDC,EAAc,WACzB,OAAOd,IAASE,MAAK,SAACK,GAAD,OAAmBA,EACrCQ,QAAO,SAAAC,GAAI,MAAmB,QAAfA,EAAKC,a,OEVnBC,EAAuB,SAAC,GAAe,IAAbX,EAAY,EAAZA,MAC9B,OACE,6BACGA,EAAMY,KAAI,gBAAGF,EAAH,EAAGA,MAAOG,EAAV,EAAUA,GAAIT,EAAd,EAAcA,KAAd,OACT,oBAAaU,MAAO,CAAEJ,SAAtB,SAAgCN,GAAvBS,SAMFE,iBAAKJ,I,SDJfb,O,eAAAA,I,aAAAA,I,yBAAAA,I,sBAAAA,M,KAOL,IAAMkB,EAAU,WACd,MAA0BC,oBAAS,iBAAc,MAAjD,mBAAOjB,EAAP,KAAckB,EAAd,KACA,EAAwCD,mBAASnB,EAAUqB,MAA3D,mBAAOC,EAAP,KAAqBC,EAArB,KAEMC,EAAW,SAACC,GAAD,IAA2BC,EAA3B,uDAAkD1B,EAAUqB,KAA5D,OAAqE,WAChFC,IAAiBI,IACnBD,IAAY5B,MAAK,SAAA8B,GAAe,OAAIP,EAASO,MAC7CJ,EAAgBG,MAIpB,OACE,qCACE,uDAEA,wBACEE,KAAK,SACLC,UAAU,SACVC,QAASN,EAAS7B,EAAQK,EAAU+B,KAHtC,4BAOA,wBACEH,KAAK,SACLC,UAAU,SACVC,QAASN,EAASvB,EAAWD,EAAUgC,WAHzC,gCAOA,wBACEJ,KAAK,SACLC,UAAU,SACVC,QAASN,EAASf,EAAaT,EAAUiC,SAH3C,4BAQA,cAAC,EAAD,CAAW/B,MAAOA,QAKTe,iBAAKC,GE1DpBgB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,U","file":"static/js/main.a0637e0c.chunk.js","sourcesContent":["// eslint-disable-next-line\nconst API_URL = `https://mate-academy.github.io/react_dynamic-list-of-goods/goods.json`;\n\nexport function getAll(): Promise<Good[]> {\n  return fetch(API_URL)\n    .then(response => response.json());\n}\n\nexport const get5First = (): Promise<Good[]> => {\n  return getAll().then((goods: Good[]) => goods\n    .sort((a, b) => a.name.localeCompare(b.name))\n    .slice(0, 5));\n};\n\nexport const getRedGoods = ():Promise<Good[]> => {\n  return getAll().then((goods: Good[]) => goods\n    .filter(good => good.color === 'red'));\n};\n","import {\n  FC,\n  memo,\n  useState,\n} from 'react';\nimport './App.scss';\n\nimport { getAll, get5First, getRedGoods } from './api/goods';\nimport GoodsList from './components/GoodsList';\n\ntype FetchFunction = () => Promise<Good[]>;\n\nenum FetchType {\n  none,\n  all,\n  fiveFirst,\n  onlyRed,\n}\n\nconst App: FC = () => {\n  const [goods, setGoods] = useState((): Good[] => []);\n  const [currentFetch, setCurrentFetch] = useState(FetchType.none);\n\n  const getGoods = (fetchFunc: FetchFunction, nextFetch: FetchType = FetchType.none) => () => {\n    if (currentFetch !== nextFetch) {\n      fetchFunc().then(goodsFromServer => setGoods(goodsFromServer));\n      setCurrentFetch(nextFetch);\n    }\n  };\n\n  return (\n    <>\n      <h1>Dynamic list of Goods</h1>\n\n      <button\n        type=\"button\"\n        className=\"button\"\n        onClick={getGoods(getAll, FetchType.all)}\n      >\n        Load All goods\n      </button>\n      <button\n        type=\"button\"\n        className=\"button\"\n        onClick={getGoods(get5First, FetchType.fiveFirst)}\n      >\n        Load 5 first goods\n      </button>\n      <button\n        type=\"button\"\n        className=\"button\"\n        onClick={getGoods(getRedGoods, FetchType.onlyRed)}\n      >\n        Load red goods\n      </button>\n\n      <GoodsList goods={goods} />\n    </>\n  );\n};\n\nexport default memo(App);\n","import { FC, memo } from 'react';\n\ntype Props = {\n  goods: Good[],\n};\n\nconst GoodsList: FC<Props> = ({ goods }) => {\n  return (\n    <ul>\n      {goods.map(({ color, id, name }) => (\n        <li key={id} style={{ color }}>{name}</li>\n      ))}\n    </ul>\n  );\n};\n\nexport default memo(GoodsList);\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}